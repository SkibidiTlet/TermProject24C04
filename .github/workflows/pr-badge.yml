name: PR Status Badge

on:
  pull_request_review:
    types: [submitted, dismissed]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  update-badge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Get PR approval status
        id: pr_status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request ? context.payload.pull_request.number : context.payload.number;
            
            const reviews = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number: prNumber,
            });
            
            const approvals = reviews.data.filter(review => review.state === 'APPROVED');
            const hasApproval = approvals.length > 0;
            
            return { hasApproval };
      
      - name: Update PR description with badge
        if: success()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request ? context.payload.pull_request.number : context.payload.number;
            const hasApproval = ${{ steps.pr_status.outputs.result != '' && fromJSON(steps.pr_status.outputs.result).hasApproval }};
            
            const badge = hasApproval 
              ? '![Approval Status](https://img.shields.io/badge/Approval-Approved-brightgreen)'
              : '![Approval Status](https://img.shields.io/badge/Approval-Needed-yellow)';
            
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: prNumber
            });
            
            let body = pr.data.body || '';
            
            // Remove old badge if exists
            body = body.replace(/!\[Approval Status\]\(https:\/\/img\.shields\.io\/badge\/Approval-(Approved|Needed)-(brightgreen|yellow)\)/g, '');
            
            // Add new badge
            body = badge + '\n\n' + body;
            
            await github.rest.pulls.update({
              owner,
              repo,
              pull_number: prNumber,
              body
            });
